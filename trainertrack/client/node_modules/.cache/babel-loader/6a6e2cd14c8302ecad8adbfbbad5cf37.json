{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth/';\n\n// Store callbacks for authentication state changes\nlet authStateCallbacks = [];\nconst register = async (username, email, password) => {\n  const response = await axios.post(API_URL + 'register', {\n    username,\n    email,\n    password\n  });\n  return response.data;\n};\nconst login = async (username, password) => {\n  const response = await axios.post(API_URL + 'login', {\n    username,\n    password\n  });\n  if (response.data.accessToken) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n    localStorage.setItem('token', response.data.accessToken);\n    // Notify all callbacks about auth state change\n    notifyAuthStateChange(response.data.user);\n  }\n  return response.data.user;\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('token');\n  // Notify all callbacks about auth state change\n  notifyAuthStateChange(null);\n};\nconst getCurrentUser = () => {\n  const userData = localStorage.getItem('user');\n  if (userData) {\n    try {\n      const parsedData = JSON.parse(userData);\n      return parsedData.user || parsedData;\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  }\n  return null;\n};\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  const user = getCurrentUser();\n  return !!(token && user);\n};\nconst onAuthStateChanged = callback => {\n  authStateCallbacks.push(callback);\n\n  // Immediately call with current user state\n  const currentUser = getCurrentUser();\n  callback(currentUser);\n\n  // Return unsubscribe function\n  return () => {\n    authStateCallbacks = authStateCallbacks.filter(cb => cb !== callback);\n  };\n};\nconst notifyAuthStateChange = user => {\n  authStateCallbacks.forEach(callback => {\n    try {\n      callback(user);\n    } catch (error) {\n      console.error('Error in auth state callback:', error);\n    }\n  });\n};\nexport const authService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  isAuthenticated,\n  onAuthStateChanged\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","authStateCallbacks","register","username","email","password","response","post","data","login","accessToken","localStorage","setItem","JSON","stringify","notifyAuthStateChange","user","logout","removeItem","getCurrentUser","userData","getItem","parsedData","parse","error","console","isAuthenticated","token","onAuthStateChanged","callback","push","currentUser","filter","cb","forEach","authService"],"sources":["C:/Users/Vitor Passagem/Desktop/TrainerTrack-project/trainertrack/client/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/auth/';\n\n// Store callbacks for authentication state changes\nlet authStateCallbacks = [];\n\nconst register = async (username, email, password) => {\n    const response = await axios.post(API_URL + 'register', {\n        username,\n        email,\n        password,\n    });\n    return response.data;\n};\n\nconst login = async (username, password) => {\n    const response = await axios.post(API_URL + 'login', {\n        username,\n        password,\n    });\n    if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n        localStorage.setItem('token', response.data.accessToken);\n        // Notify all callbacks about auth state change\n        notifyAuthStateChange(response.data.user);\n    }\n    return response.data.user;\n};\n\nconst logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    // Notify all callbacks about auth state change\n    notifyAuthStateChange(null);\n};\n\nconst getCurrentUser = () => {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n        try {\n            const parsedData = JSON.parse(userData);\n            return parsedData.user || parsedData;\n        } catch (error) {\n            console.error('Error parsing user data:', error);\n            return null;\n        }\n    }\n    return null;\n};\n\nconst isAuthenticated = () => {\n    const token = localStorage.getItem('token');\n    const user = getCurrentUser();\n    return !!(token && user);\n};\n\nconst onAuthStateChanged = (callback) => {\n    authStateCallbacks.push(callback);\n    \n    // Immediately call with current user state\n    const currentUser = getCurrentUser();\n    callback(currentUser);\n    \n    // Return unsubscribe function\n    return () => {\n        authStateCallbacks = authStateCallbacks.filter(cb => cb !== callback);\n    };\n};\n\nconst notifyAuthStateChange = (user) => {\n    authStateCallbacks.forEach(callback => {\n        try {\n            callback(user);\n        } catch (error) {\n            console.error('Error in auth state callback:', error);\n        }\n    });\n};\n\nexport const authService = {\n    register,\n    login,\n    logout,\n    getCurrentUser,\n    isAuthenticated,\n    onAuthStateChanged,\n};\n\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}