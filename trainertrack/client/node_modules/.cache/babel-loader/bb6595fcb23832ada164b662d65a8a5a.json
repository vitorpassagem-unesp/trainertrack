{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/clients/';\n\n// Add auth token to requests\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\n\n// Function to get all clients\nexport const getClients = async () => {\n  try {\n    const response = await axios.get(API_URL, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get a client by ID\nexport const getClientById = async clientId => {\n  try {\n    const response = await axios.get(`${API_URL}${clientId}`, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to create a new client\nexport const createClient = async clientData => {\n  try {\n    const response = await axios.post(API_URL, clientData, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to update an existing client\nexport const updateClient = async (clientId, clientData) => {\n  try {\n    const response = await axios.put(`${API_URL}${clientId}`, clientData, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to delete a client\nexport const deleteClient = async clientId => {\n  try {\n    const response = await axios.delete(`${API_URL}${clientId}`, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Default export with all functions\nconst clientService = {\n  getClients,\n  getClientById,\n  createClient,\n  updateClient,\n  deleteClient\n};\nexport default clientService;","map":{"version":3,"names":["axios","API_URL","getAuthHeader","token","localStorage","getItem","Authorization","getClients","response","get","headers","data","error","getClientById","clientId","createClient","clientData","post","updateClient","put","deleteClient","delete","clientService"],"sources":["C:/Users/Vitor Passagem/Desktop/TrainerTrack-project/trainertrack/client/src/services/client.service.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/clients/';\n\n// Add auth token to requests\nconst getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    return token ? { Authorization: `Bearer ${token}` } : {};\n};\n\n// Function to get all clients\nexport const getClients = async () => {\n    try {\n        const response = await axios.get(API_URL, { \n            headers: getAuthHeader() \n        });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// Function to get a client by ID\nexport const getClientById = async (clientId) => {\n    try {\n        const response = await axios.get(`${API_URL}${clientId}`, { \n            headers: getAuthHeader() \n        });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// Function to create a new client\nexport const createClient = async (clientData) => {\n    try {\n        const response = await axios.post(API_URL, clientData, { \n            headers: getAuthHeader() \n        });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// Function to update an existing client\nexport const updateClient = async (clientId, clientData) => {\n    try {\n        const response = await axios.put(`${API_URL}${clientId}`, clientData, { \n            headers: getAuthHeader() \n        });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// Function to delete a client\nexport const deleteClient = async (clientId) => {\n    try {\n        const response = await axios.delete(`${API_URL}${clientId}`, { \n            headers: getAuthHeader() \n        });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// Default export with all functions\nconst clientService = {\n    getClients,\n    getClientById,\n    createClient,\n    updateClient,\n    deleteClient\n};\n\nexport default clientService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,eAAe;;AAE/B;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOF,KAAK,GAAG;IAAEG,aAAa,EAAE,UAAUH,KAAK;EAAG,CAAC,GAAG,CAAC,CAAC;AAC5D,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACR,OAAO,EAAE;MACtCS,OAAO,EAAER,aAAa,CAAC;IAC3B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,GAAGa,QAAQ,EAAE,EAAE;MACtDJ,OAAO,EAAER,aAAa,CAAC;IAC3B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,UAAU,IAAK;EAC9C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAChB,OAAO,EAAEe,UAAU,EAAE;MACnDN,OAAO,EAAER,aAAa,CAAC;IAC3B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG,MAAAA,CAAOJ,QAAQ,EAAEE,UAAU,KAAK;EACxD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,GAAGa,QAAQ,EAAE,EAAEE,UAAU,EAAE;MAClEN,OAAO,EAAER,aAAa,CAAC;IAC3B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAG,MAAON,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACqB,MAAM,CAAC,GAAGpB,OAAO,GAAGa,QAAQ,EAAE,EAAE;MACzDJ,OAAO,EAAER,aAAa,CAAC;IAC3B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,MAAMU,aAAa,GAAG;EAClBf,UAAU;EACVM,aAAa;EACbE,YAAY;EACZG,YAAY;EACZE;AACJ,CAAC;AAED,eAAeE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}