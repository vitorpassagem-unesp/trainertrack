{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth/';\nconst register = async (username, email, password) => {\n  const response = await axios.post(API_URL + 'register', {\n    username,\n    email,\n    password\n  });\n  return response.data;\n};\nconst login = async (username, password) => {\n  const response = await axios.post(API_URL + 'login', {\n    username,\n    password\n  });\n  if (response.data.accessToken) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\n// Add auth state change listener for AuthContext\nconst onAuthStateChanged = callback => {\n  const user = getCurrentUser();\n  callback(user);\n  return () => {}; // Return empty function for unsubscribe\n};\nexport const authService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  onAuthStateChanged\n};","map":{"version":3,"names":["axios","API_URL","register","username","email","password","response","post","data","login","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","onAuthStateChanged","callback","user","authService"],"sources":["C:/Users/Vitor Passagem/Desktop/TrainerTrack-project/trainertrack/client/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/auth/';\n\nconst register = async (username, email, password) => {\n    const response = await axios.post(API_URL + 'register', {\n        username,\n        email,\n        password,\n    });\n    return response.data;\n};\n\nconst login = async (username, password) => {\n    const response = await axios.post(API_URL + 'login', {\n        username,\n        password,\n    });\n    if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n};\n\nconst logout = () => {\n    localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem('user'));\n};\n\n// Add auth state change listener for AuthContext\nconst onAuthStateChanged = (callback) => {\n    const user = getCurrentUser();\n    callback(user);\n    return () => {}; // Return empty function for unsubscribe\n};\n\nexport const authService = {\n    register,\n    login,\n    logout,\n    getCurrentUser,\n    onAuthStateChanged\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,OAAO,GAAG,UAAU,EAAE;IACpDE,QAAQ;IACRC,KAAK;IACLC;EACJ,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMC,KAAK,GAAG,MAAAA,CAAON,QAAQ,EAAEE,QAAQ,KAAK;EACxC,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,OAAO,GAAG,OAAO,EAAE;IACjDE,QAAQ;IACRE;EACJ,CAAC,CAAC;EACF,IAAIC,QAAQ,CAACE,IAAI,CAACE,WAAW,EAAE;IAC3BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC/D;EACA,OAAOF,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;EACjBJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;AACnC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAOJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EACrC,MAAMC,IAAI,GAAGL,cAAc,CAAC,CAAC;EAC7BI,QAAQ,CAACC,IAAI,CAAC;EACd,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACvBrB,QAAQ;EACRO,KAAK;EACLM,MAAM;EACNE,cAAc;EACdG;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}