{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth/';\nconst register = async userData => {\n  try {\n    const response = await axios.post(API_URL + 'register', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Registration error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nconst login = async (email, password) => {\n  try {\n    const response = await axios.post(API_URL + 'login', {\n      email,\n      password\n    });\n    if (response.data.token) {\n      // Store user info and token in localStorage\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      localStorage.setItem('userRole', response.data.user.role || 'user');\n    }\n    return response.data.user;\n  } catch (error) {\n    var _error$response2;\n    console.error('Login error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nconst logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  localStorage.removeItem('userRole');\n};\nconst getCurrentUser = () => {\n  const userStr = localStorage.getItem('user');\n  return userStr ? JSON.parse(userStr) : null;\n};\n\n// Add auth state change listener for AuthContext\nconst onAuthStateChanged = callback => {\n  const user = getCurrentUser();\n  callback(user);\n  return () => {}; // Return empty function for unsubscribe\n};\nexport const authService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  onAuthStateChanged\n};","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","error","_error$response","console","message","login","email","password","token","localStorage","setItem","JSON","stringify","user","role","_error$response2","logout","removeItem","getCurrentUser","userStr","getItem","parse","onAuthStateChanged","callback","authService"],"sources":["C:/Users/Vitor Passagem/Desktop/TrainerTrack-project/trainertrack/client/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/auth/';\n\nconst register = async (userData) => {\n    try {\n        const response = await axios.post(API_URL + 'register', userData);\n        return response.data;\n    } catch (error) {\n        console.error('Registration error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nconst login = async (email, password) => {\n    try {\n        const response = await axios.post(API_URL + 'login', {\n            email,\n            password,\n        });\n        \n        if (response.data.token) {\n            // Store user info and token in localStorage\n            localStorage.setItem('token', response.data.token);\n            localStorage.setItem('user', JSON.stringify(response.data.user));\n            localStorage.setItem('userRole', response.data.user.role || 'user');\n        }\n        return response.data.user;\n    } catch (error) {\n        console.error('Login error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nconst logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('userRole');\n};\n\nconst getCurrentUser = () => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n};\n\n// Add auth state change listener for AuthContext\nconst onAuthStateChanged = (callback) => {\n    const user = getCurrentUser();\n    callback(user);\n    return () => {}; // Return empty function for unsubscribe\n};\n\nexport const authService = {\n    register,\n    login,\n    logout,\n    getCurrentUser,\n    onAuthStateChanged\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACjC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,UAAU,EAAEE,QAAQ,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAC3E,MAAMH,KAAK;EACf;AACJ,CAAC;AAED,MAAMI,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACrC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,OAAO,EAAE;MACjDW,KAAK;MACLC;IACJ,CAAC,CAAC;IAEF,IAAIT,QAAQ,CAACE,IAAI,CAACQ,KAAK,EAAE;MACrB;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEZ,QAAQ,CAACE,IAAI,CAACQ,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,CAACE,IAAI,CAACa,IAAI,CAAC,CAAC;MAChEJ,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEZ,QAAQ,CAACE,IAAI,CAACa,IAAI,CAACC,IAAI,IAAI,MAAM,CAAC;IACvE;IACA,OAAOhB,QAAQ,CAACE,IAAI,CAACa,IAAI;EAC7B,CAAC,CAAC,OAAOZ,KAAK,EAAE;IAAA,IAAAc,gBAAA;IACZZ,OAAO,CAACF,KAAK,CAAC,cAAc,EAAE,EAAAc,gBAAA,GAAAd,KAAK,CAACH,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBf,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACpE,MAAMH,KAAK;EACf;AACJ,CAAC;AAED,MAAMe,MAAM,GAAGA,CAAA,KAAM;EACjBP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;EAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EAC/BR,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;AACvC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,OAAO,GAAGV,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC;EAC5C,OAAOD,OAAO,GAAGR,IAAI,CAACU,KAAK,CAACF,OAAO,CAAC,GAAG,IAAI;AAC/C,CAAC;;AAED;AACA,MAAMG,kBAAkB,GAAIC,QAAQ,IAAK;EACrC,MAAMV,IAAI,GAAGK,cAAc,CAAC,CAAC;EAC7BK,QAAQ,CAACV,IAAI,CAAC;EACd,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG;EACvB5B,QAAQ;EACRS,KAAK;EACLW,MAAM;EACNE,cAAc;EACdI;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}