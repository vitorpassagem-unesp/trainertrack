{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitor Passagem\\\\Desktop\\\\TrainerTrack-project\\\\trainertrack\\\\client\\\\src\\\\contexts\\\\ClientContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport clientService from '../services/client.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ClientContext = /*#__PURE__*/createContext();\nexport const ClientProvider = ({\n  children\n}) => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchClients = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await clientService.getAllClients();\n      setClients(response.data);\n    } catch (err) {\n      console.error('Erro ao buscar clientes:', err);\n      setError(err.message || 'Erro ao carregar clientes');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchClients();\n  }, []);\n  const addClient = async clientData => {\n    try {\n      const response = await clientService.createClient(clientData);\n      setClients(prevClients => [...prevClients, response.data]);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const updateClient = async (clientId, updatedData) => {\n    try {\n      const response = await clientService.updateClient(clientId, updatedData);\n      setClients(prevClients => prevClients.map(client => client.id === clientId ? response.data : client));\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const deleteClient = async clientId => {\n    try {\n      await clientService.deleteClient(clientId);\n      setClients(prevClients => prevClients.filter(client => client.id !== clientId));\n    } catch (err) {\n      setError(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      clients,\n      loading,\n      error,\n      fetchClients,\n      addClient,\n      updateClient,\n      deleteClient\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(ClientProvider, \"zQV1hJCcmbjAPczvHNExEVBWQBA=\");\n_c = ClientProvider;\nvar _c;\n$RefreshReg$(_c, \"ClientProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","clientService","jsxDEV","_jsxDEV","ClientContext","ClientProvider","children","_s","clients","setClients","loading","setLoading","error","setError","fetchClients","response","getAllClients","data","err","console","message","addClient","clientData","createClient","prevClients","updateClient","clientId","updatedData","map","client","id","deleteClient","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vitor Passagem/Desktop/TrainerTrack-project/trainertrack/client/src/contexts/ClientContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport clientService from '../services/client.service';\n\nexport const ClientContext = createContext();\n\nexport const ClientProvider = ({ children }) => {\n    const [clients, setClients] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const fetchClients = async () => {\n        try {\n            setLoading(true);\n            setError(null);\n            const response = await clientService.getAllClients();\n            setClients(response.data);\n        } catch (err) {\n            console.error('Erro ao buscar clientes:', err);\n            setError(err.message || 'Erro ao carregar clientes');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchClients();\n    }, []);\n\n    const addClient = async (clientData) => {\n        try {\n            const response = await clientService.createClient(clientData);\n            setClients((prevClients) => [...prevClients, response.data]);\n        } catch (err) {\n            setError(err);\n        }\n    };\n\n    const updateClient = async (clientId, updatedData) => {\n        try {\n            const response = await clientService.updateClient(clientId, updatedData);\n            setClients((prevClients) =>\n                prevClients.map((client) => (client.id === clientId ? response.data : client))\n            );\n        } catch (err) {\n            setError(err);\n        }\n    };\n\n    const deleteClient = async (clientId) => {\n        try {\n            await clientService.deleteClient(clientId);\n            setClients((prevClients) => prevClients.filter((client) => client.id !== clientId));\n        } catch (err) {\n            setError(err);\n        }\n    };\n\n    return (\n        <ClientContext.Provider value={{ \n            clients, \n            loading, \n            error, \n            fetchClients,\n            addClient, \n            updateClient, \n            deleteClient \n        }}>\n            {children}\n        </ClientContext.Provider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}